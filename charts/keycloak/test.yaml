
---
# Source: keycloak/charts/mysql/templates/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: keycloak1-mysql
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-5.3.4
    app.kubernetes.io/instance: keycloak1
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  mariadb-root-password: "NmxyT0JuV2ZtMw=="
  mariadb-password: "ZDZ4T1o4OEU4cA=="
  mariadb-galera-mariabackup-password: "blVWYVJkVXUwMg=="
---
# Source: keycloak/charts/mysql/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: keycloak1-mysql-configuration
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-5.3.4
    app.kubernetes.io/instance: keycloak1
    app.kubernetes.io/managed-by: Helm
data:
  my.cnf: |
    [client]
    port=3306
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    plugin_dir=/opt/bitnami/mariadb/plugin
    
    [mysqld]
    default_storage_engine=InnoDB
    basedir=/opt/bitnami/mariadb
    datadir=/bitnami/mariadb/data
    plugin_dir=/opt/bitnami/mariadb/plugin
    tmpdir=/opt/bitnami/mariadb/tmp
    socket=/opt/bitnami/mariadb/tmp/mysql.sock
    pid_file=/opt/bitnami/mariadb/tmp/mysqld.pid
    bind_address=0.0.0.0
    
    ## Character set
    collation_server=utf8_unicode_ci
    init_connect='SET NAMES utf8'
    character_set_server=utf8
    
    ## MyISAM
    key_buffer_size=32M
    myisam_recover_options=FORCE,BACKUP
    
    ## Safety
    skip_host_cache
    skip_name_resolve
    max_allowed_packet=16M
    max_connect_errors=1000000
    sql_mode=STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_AUTO_VALUE_ON_ZERO,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,ONLY_FULL_GROUP_BY
    sysdate_is_now=1
    
    ## Binary Logging
    log_bin=mysql-bin
    expire_logs_days=14
    # Disabling for performance per http://severalnines.com/blog/9-tips-going-production-galera-cluster-mysql
    sync_binlog=0
    # Required for Galera
    binlog_format=row
    
    ## Caches and Limits
    tmp_table_size=32M
    max_heap_table_size=32M
    # Re-enabling as now works with Maria 10.1.2
    query_cache_type=1
    query_cache_limit=4M
    query_cache_size=256M
    max_connections=500
    thread_cache_size=50
    open_files_limit=65535
    table_definition_cache=4096
    table_open_cache=4096
    
    ## InnoDB
    innodb=FORCE
    innodb_strict_mode=1
    # Mandatory per https://github.com/codership/documentation/issues/25
    innodb_autoinc_lock_mode=2
    # Per https://www.percona.com/blog/2006/08/04/innodb-double-write/
    innodb_doublewrite=1
    innodb_flush_method=O_DIRECT
    innodb_log_files_in_group=2
    innodb_log_file_size=128M
    innodb_flush_log_at_trx_commit=1
    innodb_file_per_table=1
    # 80% Memory is default reco.
    # Need to re-evaluate when DB size grows
    innodb_buffer_pool_size=2G
    innodb_file_format=Barracuda
    
    ## Logging
    log_error=/opt/bitnami/mariadb/logs/mysqld.log
    slow_query_log_file=/opt/bitnami/mariadb/logs/mysqld.log
    log_queries_not_using_indexes=1
    slow_query_log=1
    
    ## SSL
    ## Use extraVolumes and extraVolumeMounts to mount /certs filesystem
    # ssl_ca=/certs/ca.pem
    # ssl_cert=/certs/server-cert.pem
    # ssl_key=/certs/server-key.pem
    
    [galera]
    wsrep_on=ON
    wsrep_provider=/opt/bitnami/mariadb/lib/libgalera_smm.so
    wsrep_sst_method=mariabackup
    wsrep_slave_threads=4
    wsrep_cluster_address=gcomm://
    wsrep_cluster_name=galera
    wsrep_sst_auth="root:"
    # Enabled for performance per https://mariadb.com/kb/en/innodb-system-variables/#innodb_flush_log_at_trx_commit
    innodb_flush_log_at_trx_commit=2
    # MYISAM REPLICATION SUPPORT #
    wsrep_replicate_myisam=ON
    
    [mariadb]
    plugin_load_add=auth_pam
    
    ## Data-at-Rest Encryption
    ## Use extraVolumes and extraVolumeMounts to mount /encryption filesystem
    # plugin_load_add=file_key_management
    # file_key_management_filename=/encryption/keyfile.enc
    # file_key_management_filekey=FILE:/encryption/keyfile.key
    # file_key_management_encryption_algorithm=AES_CTR
    # encrypt_binlog=ON
    # encrypt_tmp_files=ON
    
    ## InnoDB/XtraDB Encryption
    # innodb_encrypt_tables=ON
    # innodb_encrypt_temporary_tables=ON
    # innodb_encrypt_log=ON
    # innodb_encryption_threads=4
    # innodb_encryption_rotate_key_age=1
    
    ## Aria Encryption
    # aria_encrypt_tables=ON
    # encrypt_tmp_disk_tables=ON
---
# Source: keycloak/templates/configmap-startup.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: keycloak1-startup
  labels:
    helm.sh/chart: keycloak-9.8.1
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/instance: keycloak1
    app.kubernetes.io/version: "11.0.2"
    app.kubernetes.io/managed-by: Helm
data:
  keycloak.cli: |
    embed-server --server-config=standalone-ha.xml --std-out=echo
    batch
    
    echo Configuring node identifier
    
    ## Sets the node identifier to the node name (= pod name). Node identifiers have to be unique. They can have a
    ## maximum length of 23 characters. Thus, the chart's fullname template truncates its length accordingly.
    /subsystem=transactions:write-attribute(name=node-identifier, value=${jboss.node.name})
    
    echo Finished configuring node identifier
    
    run-batch
    stop-embedded-server
---
# Source: keycloak/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: keycloak1
  labels:
    helm.sh/chart: keycloak-9.8.1
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/instance: keycloak1
    app.kubernetes.io/version: "11.0.2"
    app.kubernetes.io/managed-by: Helm
imagePullSecrets:
    []
---
# Source: keycloak/charts/mysql/templates/headless-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: keycloak1-mysql-headless
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-5.3.4
    app.kubernetes.io/instance: keycloak1
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: galera
      port: 4567
      targetPort: galera
    - name: ist
      port: 4568
      targetPort: ist
    - name: sst
      port: 4444
      targetPort: sst
  selector:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: keycloak1
---
# Source: keycloak/charts/mysql/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: keycloak1-mysql
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-5.3.4
    app.kubernetes.io/instance: keycloak1
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: mysql
      port: 3306
      targetPort: mysql
      nodePort: null
  selector:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: keycloak1
---
# Source: keycloak/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: keycloak1-headless
  labels:
    helm.sh/chart: keycloak-9.8.1
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/instance: keycloak1
    app.kubernetes.io/version: "11.0.2"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: headless
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
  selector:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/instance: keycloak1
---
# Source: keycloak/templates/service-http.yaml
apiVersion: v1
kind: Service
metadata:
  name: keycloak1-http
  labels:
    helm.sh/chart: keycloak-9.8.1
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/instance: keycloak1
    app.kubernetes.io/version: "11.0.2"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: http
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
    - name: https
      port: 8443
      targetPort: https
      protocol: TCP
    - name: http-management
      port: 9990
      targetPort: http-management
      protocol: TCP
  selector:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/instance: keycloak1
---
# Source: keycloak/charts/mysql/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keycloak1-mysql
  labels:
    app.kubernetes.io/name: mysql
    helm.sh/chart: mysql-5.3.4
    app.kubernetes.io/instance: keycloak1
    app.kubernetes.io/managed-by: Helm
spec:
  podManagementPolicy: OrderedReady
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: mysql
      app.kubernetes.io/instance: keycloak1
  serviceName: keycloak1-mysql
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mysql
        helm.sh/chart: mysql-5.3.4
        app.kubernetes.io/instance: keycloak1
        app.kubernetes.io/managed-by: Helm
    spec:
      
      serviceAccountName: default
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: mysql
                    app.kubernetes.io/instance: keycloak1
                namespaces:
                  - default
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      containers:
        - name: "mariadb-galera"
          image: docker.io/bitnami/mariadb-galera:10.5.8-debian-10-r36
          imagePullPolicy: "IfNotPresent"
          command:
            - bash
            - -ec
            - |
                exec /opt/bitnami/scripts/mariadb-galera/entrypoint.sh /opt/bitnami/scripts/mariadb-galera/run.sh
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MARIADB_GALERA_CLUSTER_NAME
              value: "galera"
            - name: MARIADB_GALERA_CLUSTER_ADDRESS
              value: "gcomm://keycloak1-mysql-headless.default.svc.cluster.local"
            - name: MARIADB_ROOT_USER
              value: "root"
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak1-mysql
                  key: mariadb-root-password
            - name: MARIADB_DATABASE
              value: "my_database"
            - name: MARIADB_GALERA_MARIABACKUP_USER
              value: mariabackup
            - name: MARIADB_GALERA_MARIABACKUP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak1-mysql
                  key: mariadb-galera-mariabackup-password
            - name: MARIADB_ENABLE_LDAP
              value: "no"
            - name: MARIADB_ENABLE_TLS
              value: "no"
          ports:
            - name: mysql
              containerPort: 3306
            - name: galera
              containerPort: 4567
            - name: ist
              containerPort: 4568
            - name: sst
              containerPort: 4444
          livenessProbe:
            exec:
              command:
                - bash
                - -ec
                - |
                  exec mysqladmin status -u$MARIADB_ROOT_USER -p$MARIADB_ROOT_PASSWORD
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - bash
                - -ec
                - |
                  exec mysqladmin status -u$MARIADB_ROOT_USER -p$MARIADB_ROOT_PASSWORD
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: previous-boot
              mountPath: /opt/bitnami/mariadb/.bootstrap
            - name: data
              mountPath: /bitnami/mariadb
            - name: mariadb-galera-config
              mountPath: /opt/bitnami/mariadb/conf/my.cnf
              subPath: my.cnf
      volumes:
        - name: previous-boot
          emptyDir: {}
        - name: mariadb-galera-config
          configMap:
            name: keycloak1-mysql-configuration
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/name: mysql
          app.kubernetes.io/instance: keycloak1
          app.kubernetes.io/managed-by: Helm
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "8Gi"
---
# Source: keycloak/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keycloak1
  labels:
    helm.sh/chart: keycloak-9.8.1
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/instance: keycloak1
    app.kubernetes.io/version: "11.0.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: keycloak
      app.kubernetes.io/instance: keycloak1
  replicas: 1
  serviceName: keycloak1-headless
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config-startup: e28380d9d1543189dab504bb32dc86c455ff54997fdb79d6ba938b74a7835162
        checksum/secrets: 44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a
      labels:
        app.kubernetes.io/name: keycloak
        app.kubernetes.io/instance: keycloak1
    spec:
      initContainers:
        - name: pgchecker
          image: "docker.io/busybox:1.32"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          command:
            - sh
            - -c
            - |
              echo 'Waiting for MySQL to become ready...'

              until printf "." && nc -z -w 2 keycloak1-mariadb-galera 3306; do
                  sleep 2;
              done;

              echo 'MySQL OK ✓'
          resources:
            limits:
              cpu: 10m
              memory: 16Mi
            requests:
              cpu: 10m
              memory: 16Mi
      containers:
        - name: keycloak
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
          image: "docker.io/jboss/keycloak:11.0.2"
          imagePullPolicy: IfNotPresent
          command:
            []
          args:
            []
          env:
            - name: DB_VENDOR
              value: mysql
            - name: DB_ADDR
              value: keycloak1-mariadb-galera
            - name: DB_PORT
              value: "3306"
            - name: DB_DATABASE
              value: "keycloak"
            - name: DB_USER
              value: 
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak1-mariadb-galera
                  key: mariadb-password
          envFrom:
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: https
              containerPort: 8443
              protocol: TCP
            - name: http-management
              containerPort: 9990
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /auth/
              port: http
            initialDelaySeconds: 300
            timeoutSeconds: 5
            
          readinessProbe:
            httpGet:
              path: /auth/realms/master
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 1
            
          resources:
            {}
          volumeMounts:
            - name: startup
              mountPath: "/opt/jboss/startup-scripts/keycloak.cli"
              subPath: "keycloak.cli"
              readOnly: true
      serviceAccountName: keycloak1
      securityContext:
        fsGroup: 1000
      enableServiceLinks: true
      restartPolicy: Always
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: keycloak
                  app.kubernetes.io/instance: keycloak1
                matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: NotIn
                    values:
                      - test
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: keycloak
                    app.kubernetes.io/instance: keycloak1
                  matchExpressions:
                    - key: app.kubernetes.io/component
                      operator: NotIn
                      values:
                        - test
                topologyKey: failure-domain.beta.kubernetes.io/zone
        
      terminationGracePeriodSeconds: 60
      volumes:
        - name: startup
          configMap:
            name: keycloak1-startup
            defaultMode: 0555
            items:
              - key: keycloak.cli
                path: keycloak.cli

NOTES:
***********************************************************************
*                                                                     *
*                Keycloak Helm Chart by codecentric AG                *
*                                                                     *
***********************************************************************

Keycloak was installed with a Service of type ClusterIP

Create a port-forwarding with the following commands:

export POD_NAME=$(kubectl get pods --namespace default -l "app.kubernetes.io/name=keycloak,app.kubernetes.io/instance=keycloak1" -o name)
echo "Visit http://127.0.0.1:8080 to use your application"
kubectl --namespace default port-forward "$POD_NAME" 8080
